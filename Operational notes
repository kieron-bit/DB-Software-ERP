# Operational Notes & Best Practices

## Session Initialization (for Multi-Tenancy)

Before any business logic or query, make sure to start your transaction and set the session variables:

```sql
BEGIN;
SET LOCAL app.current_company_id = '<company-UUID>';
SET LOCAL app.current_user_id = '<user-UUID>';
-- Run your queries here
COMMIT;
```

## Security
- Always use `Row Level Security` (RLS) policies to enforce company-level data isolation.
- Use strong password hashing (bcrypt, argon2, etc) for `password_hash`.
- Limit network access to the database and use SSL for all connections.

## User Login Security
- Use the provided PL/pgSQL functions to handle failed login attempts and account locking.
- After a successful login, reset the user's failed attempts with the provided function.

## Backup & Maintenance
- Use `pg_dump` in custom format for consistent backups.
- Implement WAL archiving for point-in-time recovery.
- Regularly test your restore procedures.
- Monitor partition growth and disk usage.

## Performance
- Regularly run `VACUUM` and `ANALYZE`.
- Monitor and maintain indexes, especially on large tables.
- Use provided indexes for time-based queries and reporting.

## Compliance & Audit
- Regularly review audit logs.
- Implement retention policies for sensitive data.
- Run periodic penetration tests and security reviews.
